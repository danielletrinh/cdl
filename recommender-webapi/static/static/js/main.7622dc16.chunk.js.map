{"version":3,"sources":["App.js","index.js"],"names":["App","_jsxs","children","_jsx","Router","Routes","Route","path","element","Layout","index","Home","About","Dashboard","CallTheWeb","NoMatch","Link","to","Outlet","content","setContent","useState","useEffect","Axios","get","responseType","then","response","base64String","btoa","Uint8Array","data","reduce","byte","String","fromCharCode","console","log","catch","error","src","concat","alt","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"wOAIe,SAASA,IACtB,OACEC,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,kBAEJD,eAAA,KAAAC,SAAA,CAAG,wFAEgBC,cAAA,QAAAD,SAAM,YAAoB,KAAG,IAC9CC,cAAA,QAAAD,SAAM,aAAqB,MAAGC,cAAA,QAAAD,SAAM,WAAmB,wHAQzDC,cAACC,IAAM,CAAAF,SACLC,cAACE,IAAM,CAAAH,SACLD,eAACK,IAAK,CAACC,KAAK,IAAIC,QAASL,cAACM,EAAM,IAAIP,SAAA,CAClCC,cAACG,IAAK,CAACI,OAAK,EAACF,QAASL,cAACQ,EAAI,MAC3BR,cAACG,IAAK,CAACC,KAAK,QAAQC,QAASL,cAACS,EAAK,MACnCT,cAACG,IAAK,CAACC,KAAK,YAAYC,QAASL,cAACU,EAAS,MAC3CV,cAACG,IAAK,CAACC,KAAK,eAAeC,QAASL,cAACW,EAAU,MAK/CX,cAACG,IAAK,CAACC,KAAK,IAAIC,QAASL,cAACY,EAAO,eAM7C,CAEA,SAASN,IACP,OACER,eAAA,OAAAC,SAAA,CAGEC,cAAA,OAAAD,SACED,eAAA,MAAAC,SAAA,CACEC,cAAA,MAAAD,SACEC,cAACa,IAAI,CAACC,GAAG,IAAGf,SAAC,WAEfC,cAAA,MAAAD,SACEC,cAACa,IAAI,CAACC,GAAG,SAAQf,SAAC,YAEpBC,cAAA,MAAAD,SACEC,cAACa,IAAI,CAACC,GAAG,aAAYf,SAAC,gBAExBC,cAAA,MAAAD,SACEC,cAACa,IAAI,CAACC,GAAG,gBAAef,SAAC,mBAE3BC,cAAA,MAAAD,SACEC,cAACa,IAAI,CAACC,GAAG,gBAAef,SAAC,wBAK/BC,cAAA,SAKAA,cAACe,IAAM,MAGb,CAEA,SAASP,IACP,OACEV,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,SACJD,eAAA,SAAAC,SAAA,CAAO,6EAA2E,OAGxF,CAEA,SAASU,IACP,OACEX,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,UACJC,cAAA,SAAAD,SAAO,oIAGb,CAEA,SAASW,IACP,OACEZ,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,cACJC,cAAA,SAAAD,SAAO,wFAGb,CAEA,SAASY,IACP,IAAKK,EAASC,GAAcC,mBAAS,IAYrC,OAXAC,qBAAU,KACRC,IAAMC,IAAI,mCAAoC,CAAEC,aAAc,gBAC3DC,MAAMC,IACL,MAAMC,EAAeC,KAAK,IAAIC,WAAWH,EAASI,MAAMC,QAAO,CAACD,EAAME,IAASF,EAAOG,OAAOC,aAAaF,IAAO,KACjHb,EAAWQ,GACXQ,QAAQC,IAAIV,EAAS,IAEtBW,OAAOC,IACNH,QAAQC,IAAIE,EAAM,GAClB,GACH,IAEDtC,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,eACJC,cAAA,SAAAD,SAAO,uEACPC,cAAA,MAAAD,SAAI,aACJD,eAAA,OAAAC,SAAA,CAAK,qBACHC,cAAA,OAAKqC,IAAG,2BAAAC,OAA6BtB,GAAWuB,IAAI,qBAI5D,CAEA,SAAS3B,IACP,OACEd,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,aACJC,cAAA,KAAAD,SACEC,cAACa,IAAI,CAACC,GAAG,IAAGf,SAAC,4BAIrB,CClIayC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5C,cAAC6C,IAAMC,WAAU,CAAA/C,SACfC,cAACH,EAAG,M","file":"static/js/main.7622dc16.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Outlet, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>Basic Example</h1>\r\n\r\n      <p>\r\n        This example demonstrates some of the core features of React Router\r\n        including nested <code>&lt;Route&gt;</code>s,{\" \"}\r\n        <code>&lt;Outlet&gt;</code>s, <code>&lt;Link&gt;</code>s, and using a\r\n        \"*\" route (aka \"splat route\") to render a \"not found\" page when someone\r\n        visits an unrecognized URL.\r\n      </p>\r\n\r\n      {/* Routes nest inside one another. Nested route paths build upon\r\n          parent route paths, and nested route elements render inside\r\n          parent route elements. See the note about <Outlet> below. */}\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Layout />}>\r\n            <Route index element={<Home />} />\r\n            <Route path=\"about\" element={<About />} />\r\n            <Route path=\"dashboard\" element={<Dashboard />} />\r\n            <Route path=\"call-the-web\" element={<CallTheWeb />} />\r\n\r\n            {/* Using path=\"*\"\" means \"match anything\", so this route\r\n                acts like a catch-all for URLs that we don't have explicit\r\n                routes for. */}\r\n            <Route path=\"*\" element={<NoMatch />} />\r\n          </Route>\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Layout() {\r\n  return (\r\n    <div>\r\n      {/* A \"layout route\" is a good place to put markup you want to\r\n        share across all the pages on your site, like navigation. */}\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/dashboard\">Dashboard</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/call-the-web\">Call The Web</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/nothing-here\">Nothing Here</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <hr />\r\n\r\n      {/* An <Outlet> renders whatever child route is currently active,\r\n        so you can think about this <Outlet> as a placeholder for\r\n        the child routes we defined above. */}\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n      <aside>I am a very fancy home page, don't you think? I can even do math! 2 + 2 = {2+2}</aside>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h2>About</h2>\r\n      <aside>Here is some information about this page: I don't like sharing too much personal information, so this `About` page is empty. </aside>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      <aside> Let's pretend there are charts and graphs here because why not? Its so exciting!</aside>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CallTheWeb() {\r\n  let [content, setContent] = useState(\"\");\r\n  useEffect(() => {\r\n    Axios.get(\"https://i.imgur.com/XkCmUIC.jpeg\", { responseType: 'arraybuffer' })\r\n      .then((response) => {\r\n        const base64String = btoa(new Uint8Array(response.data).reduce((data, byte) => data + String.fromCharCode(byte), ''));\r\n        setContent(base64String);\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h2>CallTheWeb</h2>\r\n      <aside> Let's pretend we are calling the web here - plot twist - we are! </aside>\r\n      <h1>CONTENT!</h1>\r\n      <div> content..........\r\n        <img src={`data:image/jpeg;base64, ${content}`} alt=\"Description\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div>\r\n      <h2>We lose.</h2>\r\n      <p>\r\n        <Link to=\"/\">Go to the home page</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}